# modules/spanner/main.tf

# 配置 Google Provider 版本
terraform {
  required_providers {
    google = {
      source  = "hashicorp/google"
      version = "7.0.1"
    }
  }
}

# Spanner Instance 资源
resource "google_spanner_instance" "spanner_instance" {
  project          = var.project_id
  config           = var.instance_config
  name             = var.instance_name
  display_name     = var.display_name != "" ? var.display_name : var.instance_name
  processing_units = var.processing_units
  labels           = var.labels
  force_destroy    = var.force_destroy

  # 动态处理 KMS 密钥
  dynamic "encryption_config" {
    for_each = var.kms_key_name != null ? [1] : []
    content {
      kms_key_name = var.kms_key_name
    }
  }
}

# Spanner IAM 权限管理
resource "google_spanner_instance_iam_binding" "instance_iam" {
  for_each = var.iam_roles

  project  = var.project_id
  instance = google_spanner_instance.spanner_instance.name
  role     = each.key
  members  = each.value
}

# Spanner 数据库 (可选)
resource "google_spanner_database" "default_database" {
  count           = var.create_default_database ? 1 : 0
  project         = var.project_id
  instance        = google_spanner_instance.spanner_instance.name
  name            = var.default_database_name
  version_retention_period = var.version_retention_period
  deletion_protection_policy = var.database_deletion_protection ? "PROTECTED" : "UNPROTECTED"
}





######################



# modules/spanner/variables.tf

variable "project_id" {
  description = "GCP project ID"
  type        = string
}

variable "instance_name" {
  description = "Spanner instance name"
  type        = string
  validation {
    condition     = length(var.instance_name) <= 30 && can(regex("^[a-z][a-z0-9-]*[a-z0-9]$", var.instance_name))
    error_message = "Instance name must be 1-30 characters, start with a letter, and contain only letters, numbers, or hyphens."
  }
}

variable "display_name" {
  description = "Spanner instance display name (defaults to instance_name if empty)"
  type        = string
  default     = ""
}

variable "instance_config" {
  description = "Spanner instance configuration (e.g., regional-us-central1)"
  type        = string
  default     = "regional-us-central1"
}

variable "processing_units" {
  description = "Number of processing units for the Spanner instance (e.g., 1000)"
  type        = number
  default     = 1000
  validation {
    condition     = var.processing_units >= 100 && var.processing_units <= 100000
    error_message = "Processing units must be between 100 and 100,000."
  }
}

variable "labels" {
  description = "Labels for the Spanner instance"
  type        = map(string)
  default     = {}
}

variable "force_destroy" {
  description = "Whether to allow force destroy of the Spanner instance"
  type        = bool
  default     = false
}

variable "kms_key_name" {
  description = "KMS key name for encryption (optional, e.g., projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key)"
  type        = string
  default     = null
}

variable "iam_roles" {
  description = "Map of IAM roles and members for the Spanner instance (e.g., { 'roles/spanner.databaseAdmin' = ['user:admin@example.com'] })"
  type        = map(list(string))
  default     = {}
}

variable "create_default_database" {
  description = "Whether to create a default database"
  type        = bool
  default     = false
}

variable "default_database_name" {
  description = "Name of the default database if created"
  type        = string
  default     = "default-db"
  validation {
    condition     = length(var.default_database_name) <= 30 && can(regex("^[a-z][a-z0-9-]*[a-z0-9]$", var.default_database_name))
    error_message = "Database name must be 1-30 characters, start with a letter, and contain only letters, numbers, or hyphens."
  }
}

variable "version_retention_period" {
  description = "Version retention period for the database (e.g., '7d')"
  type        = string
  default     = "7d"
  validation {
    condition     = can(regex("^[0-9]+[hmsd]$", var.version_retention_period))
    error_message = "Version retention period must be in the format of a number followed by 'h', 'm', 's', or 'd' (e.g., '7d')."
  }
}

variable "database_deletion_protection" {
  description = "Enable deletion protection for the database"
  type        = bool
  default     = true
}



##########################

# modules/spanner/outputs.tf

output "instance_name" {
  description = "The name of the created Spanner instance"
  value       = google_spanner_instance.spanner_instance.name
}

output "instance_id" {
  description = "The full ID of the created Spanner instance"
  value       = google_spanner_instance.spanner_instance.id
}

output "database_name" {
  description = "The name of the default database if created"
  value       = var.create_default_database ? google_spanner_database.default_database[0].name : null
}



#######################


module "spanner" {
  source               = "./modules/spanner"
  project_id           = "my-project"
  instance_name        = "spanner-1"
  instance_config      = "regional-us-central1"
  processing_units     = 1000
  kms_key_name         = "projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key"
  iam_roles            = {
    "roles/spanner.databaseAdmin" = ["user:admin@example.com"]
  }
  create_default_database = true
  default_database_name   = "my-db"
}


















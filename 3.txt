pipeline {
    agent any

    stages {
        stage('Export Credentials') {
            steps {
                script {
                    // 定义不同类型的凭据ID列表
                    def secretTextIds = ['secret-text-1', 'secret-text-2'] // Secret Text ID列表
                    def usernamePasswordIds = ['user-pass-1', 'user-pass-2'] // Username with Password ID列表
                    def secretFileIds = ['secret-file-1', 'secret-file-2'] // Secret File ID列表
                    def sshKeyIds = ['ssh-key-1', 'ssh-key-2'] // SSH Username with Private Key ID列表
                    def githubAppIds = ['github-app-1', 'github-app-2'] // GitHub App ID列表

                    // 用于存储JSON格式的凭据
                    def jsonCredentials = []

                    // 处理 Secret Text
                    secretTextIds.each { credId ->
                        withCredentials([string(credentialsId: credId, variable: 'SECRET')]) {
                            def credData = [
                                id: credId,
                                type: 'SecretText',
                                secret: SECRET
                            ]
                            jsonCredentials << credData
                            echo "Processed Secret Text credential: ${credId}"
                        }
                    }

                    // 处理 Username with Password
                    usernamePasswordIds.each { credId ->
                        withCredentials([usernamePassword(credentialsId: credId, usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                            def credData = [
                                id: credId,
                                type: 'UsernameWithPassword',
                                username: USER,
                                password: PASS
                            ]
                            jsonCredentials << credData
                            echo "Processed Username with Password credential: ${credId}"
                        }
                    }

                    // 处理 Secret File
                    secretFileIds.each { credId ->
                        withCredentials([file(credentialsId: credId, variable: 'FILE')]) {
                            def fileContent = readFile(file: FILE)
                            def fileName = "${credId}_secret_file"
                            writeFile file: fileName, text: fileContent
                            echo "Exported Secret File to: ${fileName}"
                        }
                    }

                    // 处理 SSH Username with Private Key
                    sshKeyIds.each { credId ->
                        withCredentials([sshUserPrivateKey(credentialsId: credId, keyFileVariable: 'KEY', usernameVariable: 'USER')]) {
                            def keyContent = readFile(file: KEY)
                            def fileName = "${credId}_private_key"
                            writeFile file: fileName, text: keyContent
                            echo "Exported SSH Private Key to: ${fileName}"
                        }
                    }

                    // 处理 GitHub App
                    githubAppIds.each { credId ->
                        echo "GitHub App credential: ${credId}. Exporting not supported in this script."
                    }

                    // 将Secret Text和Username with Password的凭据写入JSON文件
                    if (!jsonCredentials.isEmpty()) {
                        def jsonOutput = groovy.json.JsonOutput.toJson(jsonCredentials)
                        writeFile file: 'credentials.json', text: groovy.json.JsonOutput.prettyPrint(jsonOutput)
                        echo "Exported JSON credentials to: credentials.json"
                    } else {
                        echo "No Secret Text or Username with Password credentials to export as JSON."
                    }
                }
            }
        }
    }
}
